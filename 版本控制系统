1，记录历史版本信息
2，方便团队相互之间协作开发

常用的版本控制系统
cvs/svn:集中式版本控制系统，必须有一个中央总控的服务器，用来存储历史版本和代码信息；
        缺点：需要联网才能查看历史信息，另外如果中央服务器坏了，则历史版本丢失；
git：分布式版本控制系统
     优点：无需联网也可以查看记录历史版本，无需依赖中央仓库，传输速度比SVN快
git工作原理：工作区：用户可以看到的区域，用来写代码
            暂存区：临时存储用的
            历史区：生成历史版本
git使用
1，第一次安装完成后，在全局环境下配置基本信息：我是谁
 $git config-1              查看配置信息
 $git config--global--list      查看全局配置信息
 配置全局信息：用户名和邮箱
 $git config--global user.name 'xxx'
 $git config--global user.email ''
 
2,创建仓库，完成版本控制
  创建本地git仓库
   1  $git init   //会生成隐藏文件夹“.git”，用来存储暂存区和历史区信息。
   在本地完成代码后（工作区），把一些文件提交到暂存区
   1 $git add xxx     把某一个文件或者文件夹提交到暂存区
   2 $git add.        把当前仓库中所有最新修改的文件都提交到暂存区
   3 $git add-A       
   4 $git status 查看当前文件的状态 红色代表在工作区，绿色代表在暂存区，看不见东西证明所有修改的信息都已经提交到历史区
   
   将暂存区内容提交到历史区
   $git commit -m'描述信息：本次提交内容的一个描述'
   
   查看历史版本信息
   $git log
   $git reflog        包含回滚的信息
   
   
   ===========================================
   建立本地仓库与远程仓库的链接
   查看本地仓库和哪些远程仓库保持连接
   $ git remote -v                //view 查看
   让本地仓库和远程仓库新建一个链接origin
   $ git remote add origin [git仓库的地址]        //关联
   
   删除关联信息
   $ git remote rm origin
   
   提交之前先拉取
   $ git pull origin master
   拉取完成后，把本地代码提交到远程仓库，此时需要提交github用户名和密码
   
   
